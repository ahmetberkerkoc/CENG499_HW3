0.774 (+/-0.039) for {'C': 0.01, 'gamma': 1e-05, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 1e-05, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 1e-05, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 1e-05, 'kernel': 'sigmoid'}
0.774 (+/-0.039) for {'C': 0.01, 'gamma': 0.0001, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.0001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.0001, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.774 (+/-0.039) for {'C': 0.01, 'gamma': 0.001, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.001, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.001, 'kernel': 'sigmoid'}
0.774 (+/-0.039) for {'C': 0.01, 'gamma': 0.01, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.01, 'kernel': 'rbf'}
0.737 (+/-0.033) for {'C': 0.01, 'gamma': 0.01, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.01, 'kernel': 'sigmoid'}
0.774 (+/-0.039) for {'C': 0.01, 'gamma': 0.1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 0.01, 'gamma': 0.1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 0.1, 'kernel': 'sigmoid'}
0.774 (+/-0.039) for {'C': 0.01, 'gamma': 1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 0.01, 'gamma': 1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.01, 'gamma': 1, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 1e-05, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 1e-05, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 1e-05, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 1e-05, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 0.0001, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.0001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.0001, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 0.001, 'kernel': 'linear'}
0.511 (+/-0.003) for {'C': 0.1, 'gamma': 0.001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.001, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.001, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 0.01, 'kernel': 'linear'}
0.761 (+/-0.031) for {'C': 0.1, 'gamma': 0.01, 'kernel': 'rbf'}
0.810 (+/-0.021) for {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
0.511 (+/-0.005) for {'C': 0.1, 'gamma': 0.01, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 0.1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
0.811 (+/-0.030) for {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 1e-05, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 1e-05, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 1e-05, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 1e-05, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 0.0001, 'kernel': 'linear'}
0.511 (+/-0.005) for {'C': 1, 'gamma': 0.0001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 0.001, 'kernel': 'linear'}
0.751 (+/-0.040) for {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
0.551 (+/-0.011) for {'C': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.736 (+/-0.037) for {'C': 1, 'gamma': 0.001, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}
0.869 (+/-0.024) for {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
0.875 (+/-0.034) for {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.337 (+/-0.039) for {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 0.1, 'kernel': 'linear'}
0.883 (+/-0.028) for {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
0.779 (+/-0.029) for {'C': 1, 'gamma': 1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 1, 'gamma': 1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 1e-05, 'kernel': 'linear'}
0.511 (+/-0.005) for {'C': 10, 'gamma': 1e-05, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 1e-05, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 1e-05, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 0.0001, 'kernel': 'linear'}
0.749 (+/-0.042) for {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 0.0001, 'kernel': 'poly'}
0.737 (+/-0.035) for {'C': 10, 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 0.001, 'kernel': 'linear'}
0.828 (+/-0.032) for {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
0.737 (+/-0.033) for {'C': 10, 'gamma': 0.001, 'kernel': 'poly'}
0.768 (+/-0.046) for {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 0.01, 'kernel': 'linear'}
0.894 (+/-0.025) for {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
0.687 (+/-0.028) for {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 0.1, 'kernel': 'linear'}
0.885 (+/-0.024) for {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
0.738 (+/-0.046) for {'C': 10, 'gamma': 1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 10, 'gamma': 1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 1e-05, 'kernel': 'linear'}
0.747 (+/-0.045) for {'C': 100, 'gamma': 1e-05, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 100, 'gamma': 1e-05, 'kernel': 'poly'}
0.737 (+/-0.035) for {'C': 100, 'gamma': 1e-05, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 0.0001, 'kernel': 'linear'}
0.796 (+/-0.038) for {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
0.510 (+/-0.000) for {'C': 100, 'gamma': 0.0001, 'kernel': 'poly'}
0.774 (+/-0.039) for {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 0.001, 'kernel': 'linear'}
0.857 (+/-0.013) for {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
0.810 (+/-0.021) for {'C': 100, 'gamma': 0.001, 'kernel': 'poly'}
0.787 (+/-0.022) for {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 0.01, 'kernel': 'linear'}
0.896 (+/-0.016) for {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 100, 'gamma': 0.01, 'kernel': 'poly'}
0.681 (+/-0.032) for {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 0.1, 'kernel': 'linear'}
0.885 (+/-0.024) for {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 100, 'gamma': 0.1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
0.730 (+/-0.040) for {'C': 100, 'gamma': 1, 'kernel': 'linear'}
0.510 (+/-0.000) for {'C': 100, 'gamma': 1, 'kernel': 'rbf'}
0.867 (+/-0.028) for {'C': 100, 'gamma': 1, 'kernel': 'poly'}
0.510 (+/-0.000) for {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}